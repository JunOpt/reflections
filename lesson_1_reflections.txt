How did viewing a diff between two versions of a file help you see the bug that
was introduced?

    The facts that the previous file was examined before and that the new version 
    of file does not work indicates that a bug exist at the locations in which two 
    files differ.

How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?

    You can go back to an old file and start there when you encounter an unexpected problem.

What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
docs does?

    Pros: you have the authority of saving the changes that you want to keep.
    Cons: You might encounter the problem of not having access to the version that was not saved.

Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?

    It makes savings easier, which also facilitate the later review by making a logical change
    as a bundle instead of treating each file separately.

How can you use the commands git log and git diff to view the history of files?

    I can use log files as a guidance for the changes. The diff can show the details 
    that must be pinpointed.

How might using version control make you more confident to make changes that
could break something?

    I can revert to the working version if the current change breaks.

Now that you have your workspace set up, what do you want to try using Git for?

    learing how to use Git.
